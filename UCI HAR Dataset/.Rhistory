a<-matrix(c(1,2,4,5),nrow=2,ncol=2)
b<-makeCacheMatrix(a)
cacheSolve(b)
cacheSolve(b)
source('coursera_R-programm/Tests/cache1.R')
a<-matrix(c(1,2,4,5),nrow=2,ncol=2)
b<-makeCacheMatrix(a)
cacheSolve(b)
cacheSolve(b)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot[y]
hist[y]
x
plot(x,y)
?pavlue
?pv
baseline<-c(140,138,150,148,135)
week2<-c(132,135,151,146,130)
t.test(baseline, week2, pairing=TRUE)
0.5208/sqrt(5)
t.test(week2,baseline, pairing=TRUE)
t.test(week2-baseline)
qt(.975,8)
?qnorm()
?qnorm(.975)
qnorm(.975)
30 qnorm(.975)
30*qnorm(.975)
1100+30*qnorm(.975)
1100+30*qnorm(.975, 8)
30*qnorm(.95)
qt(.975,8)
30*qt(.975,8)
choose(4,2)*.5^4+choose(4,3)*.5^4+choose(4,4)*.5^4
choose(4,3)*.5^4+choose(4,4)*.5^4
ppois(1000/1787-1,100)
ppois(1000/1787-1,100,lower.tail=FALSE)
ppois(1000/1787-1,1,lower.tail=FALSE)
ppois(100/1787*9,1,lower.tail=FALSE)
ppois(9,0.01*1787,lower.tail=FALSE)
ppois(9,17.87,lower.tail=FALSE)
ppois(10,17.87,lower.tail=FALSE)
ppois(10,17.87,lower.tail=TRUE)
m1 <- -3; m2 <- 1
n1 <- n2 <- 9
s1<-1.5;s2<-1.8
sd <- sqrt(((n1-1)*s1^2+(n2-1)*s2^2)/(n1+n2-2))
sd
sd/3
se<-sd/3
ts <- (m1 - m2) / se
pv<-2*pnorm(-abs(ts))
pv
pv<-2*pnorm(abs(ts))
pv
se<-sd*3
ts <- (m1 - m2) / se
pv<-2*pnorm(abs(ts))
pv
pv<-2*pnorm(-abs(ts))
pv
se<-sd/3
ts <- (m1 - m2) / se
ts
pv<-2*pnorm(-abs(ts))
pv
z<-qnorm(1-a)
z<-qnorm(1-alpha)
z<-qnorm(1-.05)
pnorm(30+z*4/4,mean=30,sd=1,lower.tail=FALSE)
pnorm(0.01+z*0.04/10,mean=0.01,sd=0.04,lower.tail=FALSE)
pnorm(-0.01+z*0.04/10,mean=-0.01,sd=0.04,lower.tail=FALSE)
pnorm(-0.01-z*0.04/10,mean=-0.01,sd=0.04,lower.tail=FALSE)
pnorm(0+z*0.04/10,mean=0,sd=0.04,lower.tail=FALSE)
pnorm(0.01+z*0.04/10,mean=0,sd=0.04,lower.tail=FALSE)
pnorm(-0.01+z*0.04/10,mean=0,sd=0.04,lower.tail=FALSE)
pnorm(0+z*0.04/10,mean=0.01,sd=0.04,lower.tail=FALSE)
pnorm(0+z*0.04/10,mean=-0.01,sd=0.04,lower.tail=FALSE)
pnorm(0+z*0.04/10,mean=0,sd=0.04,lower.tail=FALSE)
pnorm(0.01+z*0.04/10,mean=0.01,sd=0.04,lower.tail=FALSE)
z
pnorm(0.01+z*0.04,mean=0.01,sd=0.04,lower.tail=FALSE)
pnorm(0.01+z*0.04,mean=0.0,sd=0.04,lower.tail=FALSE)
pnorm(0.0+z*0.04,mean=0.0,sd=0.04,lower.tail=FALSE)
pnorm(0.0+z*0.04,mean=0.01,sd=0.04,lower.tail=FALSE)
pnorm(0.0+z*0.04,mean=-0.01,sd=0.04,lower.tail=FALSE)
n<-120
pnorm(0.0+z*0.4/sqrt(n),mean=-0.01,sd=0.4/sqrt(n),lower.tail=FALSE)
z<-qnorm(1-a)
z<-qnorm(1-.9)
pnorm(0.0+z*0.4/sqrt(n),mean=-0.01,sd=0.4/sqrt(n),lower.tail=FALSE)
n<-140
pnorm(0.0+z*0.4/sqrt(n),mean=-0.01,sd=0.4/sqrt(n),lower.tail=FALSE)
n<-160
pnorm(0.0+z*0.4/sqrt(n),mean=-0.01,sd=0.4/sqrt(n),lower.tail=FALSE)
pnorm(0.0+z*0.4/sqrt(n),mean=-0.01,sd=0.4,lower.tail=FALSE)
n<-180
pnorm(0.0+z*0.4/sqrt(n),mean=-0.01,sd=0.4,lower.tail=FALSE)
z<-qnorm(1-.05)
pnorm(0.0+z*0.4/sqrt(n),mean=-0.01,sd=0.4,lower.tail=FALSE)
pnorm(0.0+z*0.4/sqrt(n),mean=-0.01,sd=0.4/sqrt(n),lower.tail=FALSE)
n<-160
pnorm(0.0+z*0.4/sqrt(n),mean=-0.01,sd=0.4/sqrt(n),lower.tail=FALSE)
n<-120
pnorm(0.0+z*0.4/sqrt(n),mean=-0.01,sd=0.4/sqrt(n),lower.tail=FALSE)
pnorm(0.0+z*0.4/sqrt(n),mean=-0.01,sd=0.4/sqrt(n),lower.tail=FALSE)
power.t.test(n=100,delta=.01,sd=0.04)
power.t.test(n=100,delta=.01,sd=0.04, type='one.sample', alt='one.sided')$power
power.t.test(power=0.9,delta=.01,sd=0.04, type='one.sample', alt='one.sided')$n
sqrt(1000)*.7906
median(c(1,1,1,0))
median(c(1,1,1,,0,0))
median(c(1,1,1,0,0))
median(c(1,1,1,2,2,2,2,,0))
median(c(1,1,1,2,2,2,2,0,0))
median(c(1,1,1,2,2,2,2,2,2,2,0,0))
ls()
a<-ls()
rm(a)
ls()
remove()
remove(ls())
remove(a
)
remove(a)
?manipulate
library(manipulate)
?manipulate
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
x*w
sum(x*w)
?solve
sum(x*w)
sum(w)
1.03/7
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
?lm
lm(y~x)
lm(y-mean(y)~x-mean(x))
ynew <- y-mean(y)
xnew <- x-mean(x)
lm(ynew~xnew)
scatterplot(x,y)
plot(x,y)
lm(y~0+x)
library(datasets)
data(mtcars)
x<-data(mtcars)
x
mtcars
head(mpg)
head(mtcars)
lm(mpg~wt)
lm(mpg~wt,data=mtcars)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
lm(x~y)
feature<-read.table('features.txt')
x_train<-read.table('train/X_train.txt')
y_train<-read.table('train/y_train.txt')
subject_train<-read.table('train/subject_train.txt')
x_test<-read.table('test/X_test.txt')
y_test<-read.table('test/y_test.txt')
subject_test<-read.table('test/subject_test.txt')
setwd('coursera_Getting_and_Cleaning_data/coursework/UCI HAR Dataset/')
feature<-read.table('features.txt')
x_train<-read.table('train/X_train.txt')
y_train<-read.table('train/y_train.txt')
subject_train<-read.table('train/subject_train.txt')
x_test<-read.table('test/X_test.txt')
y_test<-read.table('test/y_test.txt')
subject_test<-read.table('test/subject_test.txt')
colnames(x_train)<-feature$V2
colnames(y_train)<-'activity'
colnames(subject_train)<-'subject'
x_train_full<-cbind(subject_train, y_train, x_train)
colnames(x_test)<-feature$V2
colnames(y_test)<-'activity'
colnames(subject_test)<-'subject'
x_test_full<-cbind(subject_test, y_test, x_test)
fullset<-rbind(x_test_full, x_train_full)
featuresplus<-colnames(fullset)
mean_set<-grep('mean()', featuresplus, ignore.case=TRUE)
std_set<-grep('std()', featuresplus, ignore.case=TRUE)
activity<-grep('activity', featuresplus, ignore.case=TRUE)
subject<-grep('subject', featuresplus, ignore.case=TRUE)
columns<-c(subject, activity, mean_set, std_set)
length(columns)
length(columns
columns
finalfull<-fullset[columns,][]
finalfull
dim(finalfull)
finalfull<-fullset[,columns][]
dim(finalfull)
head(finalfull)
head(finalfull[1:10])
test<-finalfull[finalfull$activity==1,]<-walking
test<-finalfull[finalfull$activity==1,]<-'walking'
test<-finalfull[finalfull$activity==1,]<-'WALKING'
test<-finalfull[finalfull$activity==1,]<-'WALKING'
label<-read.table('activity_labels.txt')
label
label[,2]
label<-read.table('activity_labels.txt')
finfull=NULL
for(i in 1:6){
finfull<- finalfull[finalfull$activity==i,]<-label[i,2]
}
finfull
finfull<- finalfull[finalfull$activity==i,]
finfull
finalfull[finalfull$activity==1,]
dim(finalfull)
head(finalfull)
fullset<-rbind(x_test_full, x_train_full)
# extracting only mean and std (but also subject number and activity)
featuresplus<-colnames(fullset)
mean_set<-grep('mean()', featuresplus, ignore.case=TRUE)
std_set<-grep('std()', featuresplus, ignore.case=TRUE)
activity<-grep('activity', featuresplus, ignore.case=TRUE)
subject<-grep('subject', featuresplus, ignore.case=TRUE)
columns<-c(subject, activity, mean_set, std_set)
finalfull<-fullset[,columns][]
head(finalfull)
finalfull[finalfull$activity==1,]<-label[1,2]
head(finalfull)
finalfull[finalfull$activity==2,]<-label[2,2]
head(finalfull)
finalfull[finalfull$activity==2,][]1,2
finalfull[finalfull$activity==2,][1,2]
finalfull[finalfull$activity==2,][1,3]
test<-finalfull[finalfull$activity==2,]<-label[2,2]
head(test)
test<-finalfull[finalfull$activity==2,]<-label[1,2]
head(finalfull)
finalfull[,2]
feature<-read.table('features.txt')
x_train<-read.table('train/X_train.txt')
y_train<-read.table('train/y_train.txt')
subject_train<-read.table('train/subject_train.txt')
x_test<-read.table('test/X_test.txt')
y_test<-read.table('test/y_test.txt')
subject_test<-read.table('test/subject_test.txt')
colnames(x_train)<-feature$V2
colnames(y_train)<-'activity'
colnames(subject_train)<-'subject'
x_train_full<-cbind(subject_train, y_train, x_train)
colnames(x_test)<-feature$V2
colnames(y_test)<-'activity'
colnames(subject_test)<-'subject'
x_test_full<-cbind(subject_test, y_test, x_test)
fullset<-rbind(x_test_full, x_train_full)
featuresplus<-colnames(fullset)
mean_set<-grep('mean()', featuresplus, ignore.case=TRUE)
std_set<-grep('std()', featuresplus, ignore.case=TRUE)
activity<-grep('activity', featuresplus, ignore.case=TRUE)
subject<-grep('subject', featuresplus, ignore.case=TRUE)
columns<-c(subject, activity, mean_set, std_set)
finalfull<-fullset[,columns][]
label<-read.table('activity_labels.txt')
for(i in 1:6){
finalfull[finalfull$activity==i,]<-label[i,2]
}
head(finalfull)
feature<-read.table('features.txt')
x_train<-read.table('train/X_train.txt')
y_train<-read.table('train/y_train.txt')
subject_train<-read.table('train/subject_train.txt')
x_test<-read.table('test/X_test.txt')
y_test<-read.table('test/y_test.txt')
subject_test<-read.table('test/subject_test.txt')
colnames(x_train)<-feature$V2
colnames(y_train)<-'activity'
colnames(subject_train)<-'subject'
x_train_full<-cbind(subject_train, y_train, x_train)
colnames(x_test)<-feature$V2
colnames(y_test)<-'activity'
colnames(subject_test)<-'subject'
x_test_full<-cbind(subject_test, y_test, x_test)
fullset<-rbind(x_test_full, x_train_full)
featuresplus<-colnames(fullset)
mean_set<-grep('mean()', featuresplus, ignore.case=TRUE)
std_set<-grep('std()', featuresplus, ignore.case=TRUE)
activity<-grep('activity', featuresplus, ignore.case=TRUE)
subject<-grep('subject', featuresplus, ignore.case=TRUE)
columns<-c(subject, activity, mean_set, std_set)
finalfull<-fullset[,columns][]
label<-read.table('activity_labels.txt')
for(i in 1:6){
finalfull[finalfull$activity==i,][,2]<-label[i,2]
}
head(finalfull)
finalfull[,1]
finalfull[,2]
label[1,2]
label[2,2]
finalfull[finalfull$activity==1,][,2]
test<-finalfull
test[test$activity==1,][,2]<-label[1,2]
test$activity
label[1,2]
label[[1,2]]
test[test$activity==1,][,2]<-label[[1,2]]
test[test$activity==1,][,2]<-label[1,2]
test
label[]
label$V2[2]
label$V2[3]
c<-label$V2
c[1]
finalfull
finalfull$activity
for(i in 1:6){
finalfull[finalfull$activity==i,][,2]<-label$V2[i]
}
finalfull$activity
for(i in c(1:6)){
finalfull[finalfull$activity==i,][,2]<-label$V2[i]
}
finalfull$activity
finalfull[finalfull$activity==1,][,2]<-label$V2[2]
finalfull$activity
label
feature<-read.table('features.txt')
x_train<-read.table('train/X_train.txt')
y_train<-read.table('train/y_train.txt')
subject_train<-read.table('train/subject_train.txt')
x_test<-read.table('test/X_test.txt')
y_test<-read.table('test/y_test.txt')
subject_test<-read.table('test/subject_test.txt')
colnames(x_train)<-feature$V2
colnames(y_train)<-'activity'
colnames(subject_train)<-'subject'
x_train_full<-cbind(subject_train, y_train, x_train)
# fixing the test table
colnames(x_test)<-feature$V2
colnames(y_test)<-'activity'
colnames(subject_test)<-'subject'
x_test_full<-cbind(subject_test, y_test, x_test)
fullset<-rbind(x_test_full, x_train_full)
featuresplus<-colnames(fullset)
mean_set<-grep('mean()', featuresplus, ignore.case=TRUE)
std_set<-grep('std()', featuresplus, ignore.case=TRUE)
activity<-grep('activity', featuresplus, ignore.case=TRUE)
subject<-grep('subject', featuresplus, ignore.case=TRUE)
columns<-c(subject, activity, mean_set, std_set)
finalfull<-fullset[,columns][]
finalfull[finalfull$activity==1,] [,2] <-'WALKING'
finalfull[finalfull$activity==2,] [,2] <-'WALKING_UPSTAIRS'
finalfull[finalfull$activity==3,] [,2] <-'WALKING_DOWNSTAIRS'
finalfull[finalfull$activity==4,] [,2] <-'SITTING'
finalfull[finalfull$activity==5,] [,2] <-'STANDING'
finalfull[finalfull$activity==6,] [,2] <-'LAYING'
head(fullset)
test<-finalfull$activity
test[1]
test[1]
test
head(finalfull)
feature<-read.table('features.txt')
x_train<-read.table('train/X_train.txt')
y_train<-read.table('train/y_train.txt')
subject_train<-read.table('train/subject_train.txt')
x_test<-read.table('test/X_test.txt')
y_test<-read.table('test/y_test.txt')
subject_test<-read.table('test/subject_test.txt')
# fixing the training table
colnames(x_train)<-feature$V2
colnames(y_train)<-'activity'
colnames(subject_train)<-'subject'
x_train_full<-cbind(subject_train, y_train, x_train)
# fixing the test table
colnames(x_test)<-feature$V2
colnames(y_test)<-'activity'
colnames(subject_test)<-'subject'
x_test_full<-cbind(subject_test, y_test, x_test)
# combining the test and training dataset
fullset<-rbind(x_test_full, x_train_full)
# extracting only mean and std (but also subject number and activity)
featuresplus<-colnames(fullset)
mean_set<-grep('mean()', featuresplus, ignore.case=TRUE)
std_set<-grep('std()', featuresplus, ignore.case=TRUE)
activity<-grep('activity', featuresplus, ignore.case=TRUE)
subject<-grep('subject', featuresplus, ignore.case=TRUE)
columns<-c(subject, activity, mean_set, std_set)
finalfull<-fullset[,columns][]
# renaming activities
label<-read.table('activity_labels.txt')
#finalfull[finalfull$activity==1,] [,2] <-'WALKING'
#finalfull[finalfull$activity==2,] [,2] <-'WALKING_UPSTAIRS'
#finalfull[finalfull$activity==3,] [,2] <-'WALKING_DOWNSTAIRS'
#finalfull[finalfull$activity==4,] [,2] <-'SITTING'
#finalfull[finalfull$activity==5,] [,2] <-'STANDING'
#finalfull[finalfull$activity==6,] [,2] <-'LAYING'
for(i in c(1:6)){
finalfull[finalfull$activity==i,][,2]<-label$V2[i]
}
head(finalfull)
finalfull$activity <- as.factor(finalfull$activity)
library(plyr)
plotdata<-ddply(finalfull, c("subject","activity"), summarize,
totemissions=mean(fBodyBodyGyroMag-std()))
plotdata<-ddply(finalfull, c("subject","activity"), summarize,
totemissions=mean(fBodyBodyAccJerkMag-meanFreq()))
plotdata<-ddply(finalfull, c("subject","activity"), summarize,
totemissions=mean('fBodyBodyAccJerkMag-meanFreq()'))
?numcolwise()
?ddply
features<-read.table("UCI HAR Dataset//features.txt")
#only use variables with mean() and std() in their names
full.mean.std<-full[,c(grep("mean\\(\\)",features$V2),grep("std\\(\\)",features$V2))]
#rename variables to the corresponding feature names
names(full.mean.std)<-features$V2[c(grep("mean\\(\\)",features$V2),grep("std\\(\\)",features$V2))]
features<-read.table("features.txt")
#only use variables with mean() and std() in their names
full.mean.std<-full[,c(grep("mean\\(\\)",features$V2),grep("std\\(\\)",features$V2))]
#rename variables to the corresponding feature names
names(full.mean.std)<-features$V2[c(grep("mean\\(\\)",features$V2),grep("std\\(\\)",features$V2))]
#read test and training data
test<-read.table("UCI HAR Dataset/test/X_test.txt")
train<-read.table("UCI HAR Dataset/train/X_train.txt")
#combine
full<-rbind(test,train)
#read test and training data
test<-read.table("test/X_test.txt")
train<-read.table("train/X_train.txt")
#combine
full<-rbind(test,train)
features<-read.table("features.txt")
#only use variables with mean() and std() in their names
full.mean.std<-full[,c(grep("mean\\(\\)",features$V2),grep("std\\(\\)",features$V2))]
#rename variables to the corresponding feature names
names(full.mean.std)<-features$V2[c(grep("mean\\(\\)",features$V2),grep("std\\(\\)",features$V2))]
full.mean.std
head(full.mean.std)
library(dplyr)
df_mean <- as.data.frame(group_by(finalfull, subject, activity) %>% summarise_each(funs(mean)))
df_mean
dim(df_mean)
test<-unique(finalfull$subject)
length(test)
test1<-unique(finalfull$activity)
length(test1)
feature<-read.table('features.txt')
x_train<-read.table('train/X_train.txt')
y_train<-read.table('train/y_train.txt')
subject_train<-read.table('train/subject_train.txt')
x_test<-read.table('test/X_test.txt')
y_test<-read.table('test/y_test.txt')
subject_test<-read.table('test/subject_test.txt')
# reading in all the tables
feature<-read.table('features.txt')
x_train<-read.table('train/X_train.txt')
y_train<-read.table('train/y_train.txt')
subject_train<-read.table('train/subject_train.txt')
x_test<-read.table('test/X_test.txt')
y_test<-read.table('test/y_test.txt')
subject_test<-read.table('test/subject_test.txt')
# fixing the training table
colnames(x_train)<-feature$V2
colnames(y_train)<-'activity'
colnames(subject_train)<-'subject'
x_train_full<-cbind(subject_train, y_train, x_train)
# fixing the test table
colnames(x_test)<-feature$V2
colnames(y_test)<-'activity'
colnames(subject_test)<-'subject'
x_test_full<-cbind(subject_test, y_test, x_test)
# combining the test and training dataset
fullset<-rbind(x_test_full, x_train_full)
# extracting only mean and std (but also subject number and activity)
featuresplus<-colnames(fullset)
mean_set<-grep('mean()', featuresplus, ignore.case=TRUE)
std_set<-grep('std()', featuresplus, ignore.case=TRUE)
activity<-grep('activity', featuresplus, ignore.case=TRUE)
subject<-grep('subject', featuresplus, ignore.case=TRUE)
columns<-c(subject, activity, mean_set, std_set)
finalfull<-fullset[,columns][]
# renaming activities
finalfull[finalfull$activity==1,] [,2] <-'WALKING'
finalfull[finalfull$activity==2,] [,2] <-'WALKING_UPSTAIRS'
finalfull[finalfull$activity==3,] [,2] <-'WALKING_DOWNSTAIRS'
finalfull[finalfull$activity==4,] [,2] <-'SITTING'
finalfull[finalfull$activity==5,] [,2] <-'STANDING'
finalfull[finalfull$activity==6,] [,2] <-'LAYING'
test<-unique(finalfull$subject)
test1<-unique(finalfull$activity)
length(test1)
length(test)
df_mean <- as.data.frame(group_by(finalfull, subject, activity) %>% summarise_each(funs(mean)))
head(df_mean)
colnames(df_mean)
source('run_analysis.R')
read.table(tidy.txt)
read.table('tidy.txt')
mean_set<-grep('mean()', featuresplus, ignore.case=TRUE)
length(mean_set)
mean_set1<-grep('mean\\(\\)', featuresplus, ignore.case=TRUE)
length(mean_set1)
std_set<-grep('std()', featuresplus, ignore.case=TRUE)
length(std_set)
std_set1<-grep('std\\(\\)', featuresplus, ignore.case=TRUE)
length(std_set1)
